name: Build

on:
 workflow_dispatch:
 pull_request:
    branches:
      - main
 push:
   tags:
     - "v*.*.*"
   paths:
     - '.github/workflows/**'
     - 'templates/**'
     - 'src/**'
     - 'requirements.txt'
   branches:
     - main
 release:
   types: [published]
defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build release binaries

    strategy:
      fail-fast: false
      matrix:
        os:
      #    - macos
      #    - ubuntu
          - windows

    runs-on: ${{ matrix.os }}-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip pyinstaller
          pip install -r requirements.txt

      - name: Setup Env Vars
        run: |
          echo "REF_NAME=${GITHUB_REF_NAME//\//_}" >> $GITHUB_ENV
          echo "DIST_PATH=dist/twitchchatdnd/${{ matrix.os }}-${GITHUB_REF_NAME//\//_}" >> $GITHUB_ENV
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: Versioning
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            B_VERSION="${{env.REF_NAME}}"
          else
            B_VERSION="nightly-${{github.sha}}"
          fi
          echo "__version__='${B_VERSION}'" > src/_version.py

      - name: Pyinstaller Build
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            EXEC_NAME="twitchchatdnd"
          else
            EXEC_NAME="twitchchatdnd-nightly"
          fi

          pyinstaller \
          --icon=images/logo.ico --noconsole --onefile \
          --collect-binaries python312.dll --hidden-import=aiosqlite \
          --hidden-import=pyttsx4.drivers --hidden-import=pyttsx4.drivers.sapi5 \
          --distpath ${{env.DIST_PATH}}/ \
          --name="$EXEC_NAME" src/main.py

          echo "Built $EXEC_NAME to ${{env.DIST_PATH}}"


      - name: Copy Resources
        run: |
          mkdir ${{env.DIST_PATH}}/migrations
          mkdir ${{env.DIST_PATH}}/resources
          mkdir ${{env.DIST_PATH}}/resources/images
          mkdir ${{env.DIST_PATH}}/resources/server
          mkdir ${{env.DIST_PATH}}/resources/server/static
          mv images/* ${{env.DIST_PATH}}/resources/images
          mv src/server/static/* ${{env.DIST_PATH}}/resources/server/static
          mv migrations/* ${{env.DIST_PATH}}/migrations
          mv alembic.ini ${{env.DIST_PATH}}/alembic.ini


      - name: Deploy Artifacts
        uses: actions/upload-artifact@v4
        if: true && !startsWith(github.ref, 'refs/tags/')
        with:
          name: twitchchatdnd-${{matrix.os}}-latest
          path: ${{env.DIST_PATH}}/
          if-no-files-found: error
          retention-days: 20

      - name: Rename and Package
        run: |
          mkdir twitchchatdnd-${{env.REF_NAME}}
          mv ${{env.DIST_PATH}}/* twitchchatdnd-${{env.REF_NAME}}/
          if [[ "${{ matrix.os }}" == windows ]]; then
            7z a twitchchatdnd-${{matrix.os}}-${{env.REF_NAME}}.zip twitchchatdnd-${{env.REF_NAME}}
          else
            zip -r twitchchatdnd-${{matrix.os}}-${{env.REF_NAME}}.zip twitchchatdnd-${{env.REF_NAME}}
          fi
          echo "Packaged twitchchatdnd-${{env.REF_NAME}}"

      - name: Release Artifacts
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.TCDND_GITHUB_TOKEN }}
          files: twitchchatdnd-${{matrix.os}}-${{env.REF_NAME}}.zip

      - name: (Nightly) Release Artifacts
        uses: softprops/action-gh-release@v2
        if: true && startsWith(github.ref_name, 'main')
        with:
          token: ${{ secrets.TCDND_GITHUB_TOKEN }}
          prerelease: true
          name: nightly
          tag_name: nightly
          files: twitchchatdnd-${{matrix.os}}-${{env.REF_NAME}}.zip
          fail_on_unmatched_files: true
